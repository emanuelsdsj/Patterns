int op = ListaCarros.getSelectedIndex();
        if(op == -1) {
            this.TextArea.setText("-- Selecione uma fábrica de carro --");
            return;
        }
        String plugin = ListaCarros.getSelectedValue();
        this.ListaGaragem.setEnabled(true);
        this.TextArea.setText(""); 
        URL[] jar = new URL[1];
        try {
            File currentDir = new File(System.getProperty("user.dir"));
            currentDir = currentDir.getParentFile();
            currentDir = new File(currentDir + "/plugins/Carro");
            String[] plugins = currentDir.list();
            for (String plugin1 : plugins) {
                if (plugin1.split("\\.")[0].equals(plugin)) {
                    plugin = plugin1;
                }
            }
            jar[0] = (new File(currentDir + "/" + plugin.split("\\.")[0] + "." + plugin.split("\\.")[1])).toURL();
            currentDir = null;
        } catch (MalformedURLException ex) {
            Logger.getLogger(FabricaMainGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        URLClassLoader ulc = new URLClassLoader(jar);
        String factoryName = plugin.split("\\.")[0];
        IAbstractFactory factory = null;
        Class c = null;
        Method m = null;
        try {
            try {
                try {
                    c = Class.forName(factoryName.toLowerCase() + "." + factoryName, true, ulc);
                    m = c.getDeclaredMethod("getInstance", null);
                    factory = (IAbstractFactory) m.invoke(null, null);
                } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException ex) {
                    Logger.getLogger(FabricaMainGui.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (NoSuchMethodException | SecurityException ex) {
                Logger.getLogger(FabricaMainGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FabricaMainGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.selectedFactory = factory;
        this.alinharRodaButton.setEnabled(true);
        this.ligarMotorButton.setEnabled(true);
        this.tocarSomButton.setEnabled(true);
        this.estacionarCarro.setEnabled(true);


int op2 = ListaGaragem.getSelectedIndex();
        int op = ListaCarros.getSelectedIndex();
        if(op2 == -1 || op == -1) {
            this.TextArea.setText("-- Selecione uma garagem para estacionar --" + "\n");
            return;
        }
        String plugin2 = (String) ListaGaragem.getSelectedValue();
        String plugin = ListaCarros.getSelectedValue();
        this.TextArea.setText(""); 
        URL[] jar = new URL[1];
        URL[] jar2 = new URL[1];
        try {
            File currentDir = new File(System.getProperty("user.dir"));
            File currentDir2 = new File(System.getProperty("user.dir"));
            currentDir2 = currentDir2.getParentFile();
            currentDir = currentDir.getParentFile();
            currentDir = new File(currentDir + "/plugins/Carro");
            currentDir2 = new File(currentDir2 + "/plugins/Garagem");
            String[] plugins = currentDir.list();
            String [] plugins2 = currentDir2.list();
            for (String plugin1 : plugins2) {
                if (plugin1.split("\\.")[0].equals(plugin2)) {
                    plugin2 = plugin1;
                }
            }
            for (String plugin1 : plugins) {
                if (plugin1.split("\\.")[0].equals(plugin)) {
                    plugin = plugin1;
                }
            }
            jar2[0] = (new File(currentDir2 + "/" + plugin2.split("\\.")[0] + "." + plugin2.split("\\.")[1])).toURL();
            jar[0] = (new File(currentDir + "/" + plugin.split("\\.")[0] + "." + plugin.split("\\.")[1])).toURL();
            currentDir = null;
        } catch (MalformedURLException ex) {
            Logger.getLogger(FabricaMainGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        URLClassLoader ulc = new URLClassLoader(jar);
        URLClassLoader ulc2 = new URLClassLoader(jar2);
        String factoryName = plugin.split("\\.")[0];
        String factoryName2 = plugin2.split("\\.")[0];
        IAbstractFactory factory = null;
        ICreator garagem = null;
        Class c = null;
        Method m = null;
        try {
            try {
                try {
                    try {
                        c = Class.forName(factoryName2.toLowerCase() + "." + factoryName2, true, ulc2);
                        m = c.getDeclaredMethod("getInstance", null);
                        garagem = (ICreator) m.invoke(null, null);
                        c = Class.forName(factoryName.toLowerCase() + "." + factoryName, true, ulc);
                        m = c.getDeclaredMethod("getInstance", null);
                        factory = (IAbstractFactory) m.invoke(null, null);
                    } catch (IllegalArgumentException | InvocationTargetException ex) {
                        Logger.getLogger(FabricaMainGui.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (NoSuchMethodException | SecurityException ex) {
                    Logger.getLogger(FabricaMainGui.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (IllegalAccessException ex) {
                Logger.getLogger(FabricaMainGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FabricaMainGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.selectedFactory = factory;
        Carro carro = new Carro();
        carro.setMotor(factory.createMotor());
        carro.setRoda(factory.createRoda());
        carro.setSom(factory.createSom());
        this.selectedGaragem = garagem;
        this.TextArea.setText(TextArea.getText() + this.selectedGaragem.createGaragem().estacionar(carro) + factory.toString() + "\n");

