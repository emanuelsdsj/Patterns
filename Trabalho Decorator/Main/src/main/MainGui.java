/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import decorator.Decorator;
import interfaces.IComponent;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author emanuelssj
 */
public class MainGui extends javax.swing.JFrame {
    private Vector<Decorator> vectorDecorators = new Vector<Decorator>();
    private Vector<String> vectorAdded = new Vector<String>(); 
    /**
     * Creates new form MainGui
     */
    public MainGui() {
        initComponents();
        refreshPlugins();
    }
    
    private void refreshPlugins() {
        int op;
        String text = "";
        this.textArea.setText(text);
        this.vectorAdded = new Vector<String>();
        this.listDecorator.setListData(new Vector<String>());
        File currentDir = new File(System.getProperty("user.dir"));
        currentDir = currentDir.getParentFile();
        currentDir = new File(currentDir + "/plugins/decorators");
        String []plugins = currentDir.list();
        int i;
        URL[] jars = new URL[plugins.length];
        for (i = 0; i < plugins.length; i++) {
            try {
                jars[i] = (new File("./plugins/decorators" + plugins[i])).toURL();
            } catch (MalformedURLException ex) {
                Logger.getLogger(MainGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        URLClassLoader ulc = new URLClassLoader(jars);
        text = "-- Adicione o que deseja usar --";
        this.textArea.setText(textArea.getText() + text + "\n");
        for(i = 0; i < plugins.length ; i++)
             plugins[i] = plugins[i].split("\\.")[0];
        this.listDecoratorPlugins.setListData(plugins);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listDecoratorPlugins = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listDecorator = new javax.swing.JList<>();
        assarBoloButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JEditorPane();
        changeOrderButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listDecoratorPlugins.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDecoratorPlugins.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listDecoratorPlugins);

        listDecorator.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listDecorator.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(listDecorator);

        assarBoloButton.setText("Assar Bolo");
        assarBoloButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assarBoloButtonActionPerformed(evt);
            }
        });

        addButton.setText(">>");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        removeButton.setText("<<");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        textArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane3.setViewportView(textArea);

        changeOrderButton.setText("Mudar a ordem");
        changeOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeOrderButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(assarBoloButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(changeOrderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(addButton)
                                            .addComponent(removeButton)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(jButton1)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(changeOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(assarBoloButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        int op = listDecoratorPlugins.getSelectedIndex();
        if(op == -1) {
            this.textArea.setText(textArea.getText() + "-- Selecione um adicional --" + "\n");
            return;
        }
        String plugin = listDecoratorPlugins.getSelectedValue();
        this.textArea.setText(""); 
        URL[] jar = new URL[1];
        try {
            File currentDir = new File(System.getProperty("user.dir"));
            currentDir = currentDir.getParentFile();
            currentDir = new File(currentDir + "/plugins/decorators");
            String[] plugins = currentDir.list();
            for (String plugin1 : plugins) {
                if (plugin1.split("\\.")[0].equals(plugin)) {
                    plugin = plugin1;
                }
            }
            jar[0] = (new File(currentDir + "/" + plugin.split("\\.")[0] + "." + plugin.split("\\.")[1])).toURL();
            currentDir = null;
        } catch (MalformedURLException ex) {
            Logger.getLogger(MainGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        URLClassLoader ulc = new URLClassLoader(jar);
        String componentName = plugin.split("\\.")[0];
        Decorator component = null;
        try {
            component = (Decorator) Class.forName(componentName.toLowerCase() + "." + componentName, true, ulc).newInstance();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(MainGui.class.getName()).log(Level.SEVERE, null, ex);
        }

        vectorAdded.add(componentName);
        listDecorator.setListData(vectorAdded);
        vectorDecorators.add(component);
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int op = listDecorator.getSelectedIndex();
        if(op == -1) {
            this.textArea.setText(textArea.getText() + "-- Selecione algo adicionado para remover --" + "\n");
            return;
        }
        String plugin = listDecorator.getSelectedValue();
        for(int i = 0; i < vectorAdded.size(); i++) {
            if(vectorAdded.get(i).equals(plugin)) {
                System.out.println("xD");
                this.textArea.setText(textArea.getText() + "removido da lista " + plugin + "\n");
                this.vectorAdded.remove(i);
                this.vectorDecorators.remove(i);
                this.listDecorator.setListData(vectorAdded);
                break;
            }
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void assarBoloButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assarBoloButtonActionPerformed
       IComponent bolo = new Bolo();
       this.textArea.setText("");
       if(this.vectorDecorators.size() <= 0) {
           this.textArea.setText(textArea.getText() + bolo.fazer() + "\n");
           return;
       }
       int i = 0;
       for(i = 0; i < vectorDecorators.size(); i++) {
          if(i < this.vectorDecorators.size() - 1)
             this.vectorDecorators.get(i).setDecorated(this.vectorDecorators.get(i+1));
          else
             this.vectorDecorators.get(i).setDecorated(bolo);
       } 
       this.textArea.setText(textArea.getText() + this.vectorDecorators.get(0).fazer() + "\n");
    }//GEN-LAST:event_assarBoloButtonActionPerformed

    private void changeOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeOrderButtonActionPerformed
        if(this.vectorDecorators.size() <= 0)
            return;
        Vector<Decorator> vectorDecoratorsReverse = new Vector<Decorator>();
        Vector<String> vectorAddedReverse = new Vector<String>(); 
        for(int i = this.vectorDecorators.size() - 1; i >= 0; i--) {
            vectorAddedReverse.add(this.vectorAdded.get(i));
            vectorDecoratorsReverse.add(this.vectorDecorators.get(i));
        }
        this.vectorAdded = vectorAddedReverse;
        this.vectorDecorators = vectorDecoratorsReverse;
        this.listDecorator.setListData(this.vectorAdded);
    }//GEN-LAST:event_changeOrderButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.refreshPlugins();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton assarBoloButton;
    private javax.swing.JButton changeOrderButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listDecorator;
    private javax.swing.JList<String> listDecoratorPlugins;
    private javax.swing.JButton removeButton;
    private javax.swing.JEditorPane textArea;
    // End of variables declaration//GEN-END:variables
}
